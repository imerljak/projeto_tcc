spring.application.name=GED|AGESB
#server.port=8000
# Database
spring.datasource.password=${JDBC_DATABASE_PASSWORD:}
spring.datasource.username=${JDBC_DATABASE_USERNAME:imerljak}
spring.datasource.url=${JDBC_DATABASE_URL:jdbc:postgresql://localhost:5432/projeto_tcc}
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL95Dialect

# suppress inspection "SpringBootApplicationProperties"
spring.datasource.driver-class-name=${JDBC_DRIVER_NAME:org.postgresql.Driver}
spring.datasource.initialSize=${SPRING_DATASOURCE_INITIALSIZE:5}
spring.datasource.maxActive=${SPRING_DATASOURCE_MAXACTIVE:10}
spring.datasource.maxIdle=${SPRING_DATASOURCE_MAXIDE:5}
spring.datasource.minIdle=${SPRING_DATASOURCE_MINIDLE:3}
spring.datasource.removeAbandone=${SPRING_DATASOURCE_REMOVEABANDONED:true}

# JPA / Hibernate
spring.jpa.open-in-view=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=${JPA_HIBERNATE_DIALECT:org.hibernate.dialect.PostgreSQL95Dialect}

# Spring Security Queries
spring.queries.users-query=select email,senha,ativo from usuario where email=?
spring.queries.roles-query=select u.email, r.role from usuario u inner join usuario_role ur on (u.id = ur.usuario_id) inner join role r on (r.role = ur.roles_role) where u.email=?